[gd_scene load_steps=17 format=3 uid="uid://5ywona8gfnpd"]

[ext_resource type="Script" uid="uid://7dg87eebyhyn" path="res://scenes/collectable/collectable_item.gd" id="1_63id6"]
[ext_resource type="Texture2D" uid="uid://dk7f51qt5p07c" path="res://assets/images/particle/konfetti.png" id="1_nr6eu"]
[ext_resource type="Texture2D" uid="uid://de050tme13p3w" path="res://assets/images/test/toilet_paper_collectable.png" id="2_nr6eu"]
[ext_resource type="Shader" uid="uid://cefnir7qbcg6p" path="res://resources/shaders/outline.gdshader" id="3_63id6"]

[sub_resource type="Shader" id="Shader_srbc7"]
code = "shader_type canvas_item;

uniform float uv_scale = 1.0;
uniform vec4 line_color: source_color = vec4(1);
uniform vec4 color_tint: source_color = vec4(1);
uniform bool draw_line = true;
uniform float line_thickness: hint_range(0, 50) = 1.0;
uniform sampler2D noise: repeat_enable;
uniform float noise_speed = 1.0;
uniform float distortion_str = 0.1;
uniform float frame_time:hint_range(0.0, 1.0, 0.01) = 0.25;

varying float max_offset;

const vec2 OFFSETS[8] = {
	vec2(-1, -1), vec2(-1, 0), vec2(-1, 1), vec2(0, -1), vec2(0, 1),
	vec2(1, -1), vec2(1, 0), vec2(1, 1)
};


void fragment() {

	//posterize time
	float rounded_time = round(TIME/ frame_time) * frame_time;

	//distort UVs by posterized time
	vec2 base_uv = UV * uv_scale;
	vec2 noise_uv = UV * vec2(1.) + noise_speed * rounded_time;
	float noise_tex = texture(noise, noise_uv).r;
	vec2 distorted_uv = base_uv + noise_tex * distortion_str;

	vec4 color = texture(TEXTURE, distorted_uv) * color_tint;

	// create outline
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness / 2.0;
	float inline = 1.0;
	float outline = 0.0;
	for (int i = 0; i < OFFSETS.length(); i++) {
		float sample = texture(TEXTURE, distorted_uv + size * OFFSETS[i]).a;
		outline += sample;
		inline *= sample;
	}
	outline = min(1.0, outline) - color.a;
	inline = (1.0 - inline) * color.a;


	vec4 outline_color = mix(line_color,color, color.a);
	float alpha = ((outline + inline) * float(draw_line)) + color.a;
	alpha = smoothstep(0.75,0.9, alpha);

	vec4 final_color = vec4(outline_color.r, outline_color.g, outline_color.b, alpha);

	COLOR = final_color;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_63id6"]
frequency = 0.0043

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_klap2"]
seamless = true
noise = SubResource("FastNoiseLite_63id6")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_il0ka"]
shader = SubResource("Shader_srbc7")
shader_parameter/uv_scale = 1.0
shader_parameter/line_color = Color(0, 0, 0, 0)
shader_parameter/color_tint = Color(0.41598, 0.41598, 0.41598, 0.439216)
shader_parameter/draw_line = true
shader_parameter/line_thickness = 4.866
shader_parameter/noise = SubResource("NoiseTexture2D_klap2")
shader_parameter/noise_speed = 3.08
shader_parameter/distortion_str = 0.01
shader_parameter/frame_time = 0.25

[sub_resource type="Curve" id="Curve_63id6"]
_data = [Vector2(0, 0.539326), 0.0, 0.0, 0, 0, Vector2(1, 0.011236), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_k2e0m"]
frequency = 0.0043

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_nn3cr"]
seamless = true
noise = SubResource("FastNoiseLite_k2e0m")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_63id6"]
shader = ExtResource("3_63id6")
shader_parameter/uv_scale = 1.0
shader_parameter/line_color = Color(1, 1, 1, 1)
shader_parameter/color_tint = Color(1, 1, 1, 1)
shader_parameter/draw_line = true
shader_parameter/line_thickness = 5.581
shader_parameter/noise = SubResource("NoiseTexture2D_nn3cr")
shader_parameter/noise_speed = 3.08
shader_parameter/distortion_str = 0.01
shader_parameter/frame_time = 0.25

[sub_resource type="CircleShape2D" id="CircleShape2D_63id6"]
radius = 46.1736

[sub_resource type="Animation" id="Animation_63id6"]
length = 0.001
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AvailableVisuals:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AvailableVisuals:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_nr6eu"]
resource_name = "hovering"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AvailableVisuals:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667, 0.1, 0.133333, 0.166667, 0.2, 0.233333, 0.266667, 0.3, 0.333333, 0.366667, 0.4, 0.433333, 0.466667, 0.5, 0.533333, 0.566667, 0.6, 0.633333, 0.666667, 0.7, 0.733333, 0.766667, 0.8, 0.833333, 0.866667, 0.9, 0.933333, 0.966667, 1, 1.03333, 1.06667, 1.1, 1.13333, 1.16667, 1.2, 1.23333, 1.26667, 1.3, 1.33333, 1.36667, 1.4, 1.43333, 1.46667, 1.5, 1.53333, 1.56667, 1.6, 1.63333, 1.66667, 1.7, 1.73333, 1.76667, 1.8, 1.83333, 1.86667, 1.9, 1.93333, 1.96667, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, -0.016429), Vector2(0, -0.064216), Vector2(0, -0.141111), Vector2(0, -0.244866), Vector2(0, -0.373229), Vector2(0, -0.523951), Vector2(0, -0.694783), Vector2(0, -0.883475), Vector2(0, -1.08778), Vector2(0, -1.30544), Vector2(0, -1.53421), Vector2(0, -1.77185), Vector2(0, -2.01609), Vector2(0, -2.2647), Vector2(0, -2.51542), Vector2(0, -2.766), Vector2(0, -3.01419), Vector2(0, -3.25775), Vector2(0, -3.49441), Vector2(0, -3.72195), Vector2(0, -3.93809), Vector2(0, -4.1406), Vector2(0, -4.32722), Vector2(0, -4.49571), Vector2(0, -4.64381), Vector2(0, -4.76928), Vector2(0, -4.86987), Vector2(0, -4.94331), Vector2(0, -4.98738), Vector2(0, -4.99982), Vector2(0, -4.97977), Vector2(0, -4.92913), Vector2(0, -4.85007), Vector2(0, -4.74481), Vector2(0, -4.61553), Vector2(0, -4.46443), Vector2(0, -4.29371), Vector2(0, -4.10555), Vector2(0, -3.90216), Vector2(0, -3.68574), Vector2(0, -3.45847), Vector2(0, -3.22255), Vector2(0, -2.98018), Vector2(0, -2.73355), Vector2(0, -2.48486), Vector2(0, -2.23631), Vector2(0, -1.99008), Vector2(0, -1.74838), Vector2(0, -1.5134), Vector2(0, -1.28733), Vector2(0, -1.07238), Vector2(0, -0.870729), Vector2(0, -0.684581), Vector2(0, -0.51613), Vector2(0, -0.367571), Vector2(0, -0.241099), Vector2(0, -0.138912), Vector2(0, -0.063202), Vector2(0, -0.0161664), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AvailableVisuals:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.0666667, 0.1, 0.133333, 0.166667, 0.2, 0.233333, 0.266667, 0.3, 0.333333, 0.366667, 0.4, 0.433333, 0.466667, 0.5, 0.533333, 0.566667, 0.6, 0.633333, 0.666667, 0.7, 0.733333, 0.766667, 0.8, 0.833333, 0.866667, 0.9, 0.933333, 0.966667, 1, 1.03333, 1.06667, 1.1, 1.13333, 1.16667, 1.2, 1.23333, 1.26667, 1.3, 1.33333, 1.36667, 1.4, 1.43333, 1.46667, 1.5, 1.53333, 1.56667, 1.6, 1.63333, 1.66667, 1.7, 1.73333, 1.76667, 1.8, 1.83333, 1.86667, 1.9, 1.93333, 1.96667, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.00202217, -0.00724666, -0.0144104, -0.0222503, -0.0295034, -0.0349066, -0.0383167, -0.0404948, -0.0415337, -0.0415264, -0.0405661, -0.0387456, -0.0361579, -0.032896, -0.029053, -0.0247218, -0.0199955, -0.0149669, -0.00972911, -0.00437512, 0.0010021, 0.00630955, 0.0114542, 0.0163432, 0.0208833, 0.0249818, 0.0285455, 0.0314815, 0.0336968, 0.0351071, 0.0359824, 0.0365051, 0.0366979, 0.0365834, 0.0361843, 0.0355232, 0.0346229, 0.0335059, 0.032195, 0.0307128, 0.0290819, 0.0273251, 0.025465, 0.0235242, 0.0215255, 0.0194915, 0.0174448, 0.0154082, 0.0134042, 0.0114556, 0.009585, 0.00781509, 0.00616852, 0.00466796, 0.00333607, 0.00219552, 0.00126898, 0.0005791, 0.000148553, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_il0ka"]
_data = {
&"RESET": SubResource("Animation_63id6"),
&"hovering": SubResource("Animation_nr6eu")
}

[node name="collectable" type="Area2D" node_paths=PackedStringArray("available_visuals", "collected_visuals", "collision_shape")]
collision_layer = 0
collision_mask = 2
script = ExtResource("1_63id6")
available_visuals = NodePath("AvailableVisuals")
collected_visuals = NodePath("TakenVisuals")
collision_shape = NodePath("CollisionShape2D")

[node name="TakenVisuals" type="Node2D" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="TakenVisuals"]
material = SubResource("ShaderMaterial_il0ka")
texture = ExtResource("2_nr6eu")

[node name="AvailableVisuals" type="Node2D" parent="."]

[node name="CPUParticles2D" type="CPUParticles2D" parent="AvailableVisuals"]
position = Vector2(-1, 0)
amount = 16
texture = ExtResource("1_nr6eu")
randomness = 1.0
direction = Vector2(0, -1)
spread = 180.0
gravity = Vector2(0, -50)
initial_velocity_max = 193.8
angle_max = 720.0
scale_amount_min = 0.2
scale_amount_max = 0.6
scale_amount_curve = SubResource("Curve_63id6")

[node name="Sprite2D" type="Sprite2D" parent="AvailableVisuals"]
material = SubResource("ShaderMaterial_63id6")
texture = ExtResource("2_nr6eu")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_63id6")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_il0ka")
}
autoplay = "hovering"
